@use '../../../../css/abstracts/mixins/button' as btn;

:where(.button):where(button, a, input, span, div) {
  @include btn.button-reset();
}

.button {
  align-items: center;
  background-color: hsl(var(--color-primary));
  block-size: 2.5rem;
  border-radius: 0.375rem;
  border: 0.375rem solid hsl(var(--color-border) / 0.8);
  color: var(--color-primary-foreground);
  display: inline-flex;
  font-size: 0.875rem;
  font-weight: var(--font-weight-semibold);
  justify-content: center;
  max-inline-size: 20rem;
  outline: none;
  padding-block: 0.5rem;
  padding-inline: 1rem;
  transition: background-color var(--duration-fast) var(--ease-in-out);
  white-space: nowrap;

  &:hover {
    background-color: hsl(var(--color-primary) / 0.8);
    cursor: pointer;
    transition: background-color var(--duration-fast) var(--ease-in-out);
  }

  &:focus-visible {
    box-shadow: 0 0 0 3px hsl(var(--color-foreground) / 0.50);
    outline: none;
  }

  &:disabled {
    pointer-events: none;
    opacity: 0.5;
  }

  &:disabled:focus-visible {
    box-shadow: none;
    outline: none;
  }

  &[data-variant='destructive'] {
    background-color: hsl(var(--color-destructive));
    color: hsl(var(--color-destructive-foreground));
    transition: background-color var(--duration-fast) var(--ease-in-out);

    &:hover {
      background-color: hsl(var(--color-destructive) / 0.9);
    }
  }


  &[data-variant='outline'] {
    border: var(--border-size-1) solid hsl(var(--color-border));
    background-color: hsl(var(--color-background));
    color: hsl(var(--color-foreground));
    transition: background-color var(--duration-fast) var(--ease-in-out), color var(--duration-fast) var(--ease-in-out);

    &:hover {
      background-color: hsl(var(--color-foreground) / 0.05);
      cursor: pointer;
      color: hsl(var(--color-accent-foreground));
    }
  }


  &[data-variant='secondary'] {
    background-color: hsl(var(--color-secondary));
    color: hsl(var(--color-secondary-foreground));
    transition: background-color var(--duration-fast) var(--ease-in-out);

    &:hover {
      background-color: hsl(var(--color-secondary) / 0.9);
    }
  }


  &[data-variant='ghost'] {
    align-items: center;
    background-color: transparent;
    border: var(--border-size-1) solid transparent;
    color: hsl(var(--color-foreground));
    display: flex;

    &:hover {
      background-color: hsl(var(--color-foreground) / 0.1);
    }
  }


  &[data-variant='link'] {
    color: hsl(var(--color-foreground));
    background-color: transparent;
    text-decoration: none;
    transition: text-decoration var(--duration-fast) var(--ease-in-out);
    border: none;
    padding: 0;
    block-size: max-content;
    inline-size: max-content;

    &:hover {
      color: hsl(var(--color-primary));
      text-decoration-color: hsl(var(--color-foreground));
    }
  }


  &[data-variant='icon'] {
    align-items: center;
    background-color: hsl(var(--color-foreground));
    block-size: 2rem;
    border-radius: var(--radius-round);
    border: none;
    color: hsl(var(--color-background));
    display: flex;
    inline-size: 2rem;
    justify-content: center;
    padding: 0;

    &:hover {
      background-color: hsl(var(--color-accent) / 0.8);
    }
  }

  /* sizing */
  &[data-size='sm'] {
    block-size: 2.25rem;
    border-radius: 0.375rem;
    padding-inline: 0.75rem;
  }

  &[data-size='lg'] {
    block-size: 2.75rem;
    border-radius: 0.375rem;
    padding-inline: 2rem;
  }

  &[data-size='icon'] {
    block-size: 2.5rem;
    inline-size: 2.5rem;

    .icon {
      color: var(--color-primary-foreground);
    }
  }
}



